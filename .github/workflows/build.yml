name: Build Flutter App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.9'
        channel: 'stable'
        cache: true
    
    - name: Add missing repositories for CI
      run: |
        echo "Adding missing repositories for CI environment..."
        # Backup original files
        cp android/build.gradle android/build.gradle.bak
        # Add jcenter and jitpack after each 'public' repository
        sed -i "s|maven { url 'https://maven.aliyun.com/repository/public' }|maven { url 'https://maven.aliyun.com/repository/public' }\
        maven { url 'https://jcenter.bintray.com' }\
        maven { url 'https://jitpack.io' }|g" android/build.gradle
        echo "Repository configuration updated for CI"
        echo "Modified android/build.gradle:"
        cat android/build.gradle | grep -A 10 -B 2 "repositories"
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Flutter doctor (diagnostic info)
      run: flutter doctor -v
    
    - name: Analyze code
      run: flutter analyze --no-fatal-infos
      continue-on-error: true
    
    - name: Run tests (if test directory exists)
      run: |
        if [ -d "test" ]; then
          flutter test
        else
          echo "No test directory found, skipping tests"
        fi
      continue-on-error: true
    
    - name: Build APK
      run: |
        echo "Building APK..."
        flutter build apk --release --verbose 2>&1 | tee build.log
        exit_code=${PIPESTATUS[0]}
        if [ $exit_code -ne 0 ]; then
          echo "Build failed with exit code: $exit_code"
          echo "Last 100 lines of build log:"
          tail -100 build.log
          echo "Searching for error messages:"
          grep -i "error\|exception\|failed" build.log | tail -20
          exit $exit_code
        fi
        echo "APK build completed. Checking outputs:"
        find build/app/outputs -name "*.apk" -type f | head -5
      env:
        FLUTTER_GRADLE_PLUGIN_APPLY_MODE: legacy
    
    - name: Build App Bundle
      run: |
        echo "Building App Bundle..."
        flutter build appbundle --release --verbose
        echo "AAB build completed. Checking outputs:"
        find build/app/outputs -name "*.aab" -type f | head -5
      env:
        FLUTTER_GRADLE_PLUGIN_APPLY_MODE: legacy
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
    
    - name: Upload App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.9'
        channel: 'stable'
        cache: true
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Flutter doctor (diagnostic info)
      run: flutter doctor -v
    
    - name: Install CocoaPods
      run: sudo gem install cocoapods
    
    - name: Install iOS dependencies
      run: |
        cd ios
        pod install
    
    - name: Build iOS (no signing)
      run: |
        echo "Building iOS app..."
        flutter build ios --release --no-codesign --verbose
        echo "iOS build completed. Checking outputs:"
        ls -la build/ios/iphoneos/ || echo "Build directory not found"
      env:
        FLUTTER_GRADLE_PLUGIN_APPLY_MODE: legacy
    
    - name: Create IPA
      run: |
        cd build/ios/iphoneos
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r app-release.ipa Payload/
    
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: build/ios/iphoneos/app-release.ipa

  build-web:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.9'
        channel: 'stable'
        cache: true
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Flutter doctor (diagnostic info)
      run: flutter doctor -v
    
    - name: Build Web
      run: flutter build web --release
    
    - name: Upload Web Build
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/